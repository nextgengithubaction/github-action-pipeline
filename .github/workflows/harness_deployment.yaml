name: Build and Harness Deployment
on:
  workflow_call:
  workflow_dispatch:
jobs:
  build:
    runs-on: dindrunner
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up HashiCorp Vault 
      uses: hashicorp/vault-action@v2 
      with: 
        #Reading secrets from Github secrets 
        url: "${{ secrets.VAULT_URL }}" 
        token: "${{ secrets.VAULT_SECRET }}" 
        tlsSkipVerify: true 
        #Reading secrets from hashicorp vault 
        secrets: | 
          secret/data/githubactions DOCKERHUB_USERNAME | DOCKERHUB_USERNAME ;
          secret/data/githubactions DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD
    
    - name: Helm Setup
      run: |
        sudo apt-get update -y
        sudo apt install curl -y
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
 
    - name: Build and push Docker image ACR
      env:
        DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ env.DOCKERHUB_PASSWORD }}
        IMAGE_TAG: ${{ github.run_id }}
      run: |
        docker login -u $DOCKERHUB_USERNAME gitopsdemo2023.azurecr.io -p $DOCKERHUB_PASSWORD
        docker build -t helloworld-app:${{ env.IMAGE_TAG }} .
        docker tag helloworld-app:${{ env.IMAGE_TAG }} gitopsdemo2023.azurecr.io/helloworld-app:${{ env.IMAGE_TAG }}
        docker push gitopsdemo2023.azurecr.io/helloworld-app:${{ env.IMAGE_TAG }}

    - name: Helm Package
      env:
        DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ env.DOCKERHUB_PASSWORD }}
      run: |
        helm registry login gitopsdemo2023.azurecr.io --username $DOCKERHUB_USERNAME  --password  $DOCKERHUB_PASSWORD
        helm package myhelmapp
        echo "Current Working Directory: $(pwd)"
        helm push myhelmapp-*.tgz "oci://gitopsdemo2023.azurecr.io/helm"
 

  deploy-dev:
    needs: build
    runs-on: dindrunner
    environment: dev
    if: github.ref == 'refs/heads/feature' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Harness' || github.ref == 'refs/heads/feature_app_insights_test'    
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to DEV
      env:
        IMAGE_TAG: ${{ github.run_id }}
        environment: dev
      run: |
        sudo apt-get update -y
        sudo apt install curl -y
        sudo apt-get install python3-pip -y
        sudo pip install requests
        python3 ./.github/scripts/harness_start.py ${{ env.environment }}  ${{ env.IMAGE_TAG }}

  selenium-dev:
    needs: deploy-dev
    uses: ./.github/workflows/scrape.yml
  
  blazemeter-dev:
    needs: deploy-dev
    uses: ./.github/workflows/blazemeter.yml
    secrets: inherit
  
  deploy-qa:
    needs: [deploy-dev, selenium-dev, blazemeter-dev]
    runs-on: dindrunner
    environment: qa
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Harness'  || github.ref == 'refs/heads/feature_app_insights_test'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to QA
      env:
        IMAGE_TAG: ${{ github.run_id }}
        environment: qa
      run: |
        sudo apt-get update -y
        sudo apt install curl -y
        sudo apt-get install python3-pip -y
        sudo pip install requests
        python3 ./.github/scripts/harness_start.py ${{ env.environment }}  ${{ env.IMAGE_TAG }}

  selenium-qa:
    needs: deploy-qa
    uses: ./.github/workflows/scrape.yml
  
  blazemeter-qa:
    needs: deploy-qa
    uses: ./.github/workflows/blazemeter.yml
    secrets: inherit

  deploy-uat:
    needs: [deploy-qa, selenium-qa, blazemeter-qa]
    runs-on: dindrunner
    environment: uat
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Harness'  || github.ref == 'refs/heads/feature_app_insights_test'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to UAT
      env:
        IMAGE_TAG: ${{ github.run_id }}
        environment: uat
      run: |
        sudo apt-get update -y
        sudo apt install curl -y
        sudo apt-get install python3-pip -y
        sudo pip install requests
        python3 ./.github/scripts/harness_start.py ${{ env.environment }}  ${{ env.IMAGE_TAG }}

  selenium-uat:
    needs: deploy-uat
    uses: ./.github/workflows/scrape.yml
  
  blazemeter-uat:
    needs: deploy-uat
    uses: ./.github/workflows/blazemeter.yml
    secrets: inherit

  deploy-prod:
    needs: [deploy-uat, selenium-uat, blazemeter-uat]
    runs-on: ubuntu-latest
    environment: prod
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Harness'  || github.ref == 'refs/heads/feature_app_insights_test'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy to PROD
      env:
        IMAGE_TAG: ${{ github.run_id }}
        environment: prod
      run: |
        sudo apt-get update -y
        sudo apt install curl -y
        sudo apt-get install python3-pip -y
        sudo pip install requests
        python3 ./.github/scripts/harness_start.py ${{ env.environment }}  ${{ env.IMAGE_TAG }}

  selenium-prod:
    needs: deploy-prod
    uses: ./.github/workflows/scrape.yml
  
  blazemeter-prod:
    needs: deploy-prod
    uses: ./.github/workflows/blazemeter.yml
    secrets: inherit
